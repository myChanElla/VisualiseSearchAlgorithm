import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JPanel;

public class GridVisualiser extends JPanel
{
	private int x= GridMaker.chosenX;
	private int y= GridMaker.chosenY;
	private Node start= GridMaker.start;
	private Node goal= GridMaker.end;
	private ArrayList<Node> nonTraversable = GridMaker.obstacles;
	private ArrayList<Coordinate> nodeSquares =  new ArrayList<Coordinate>();
	public GridVisualiser(){}
	
	public void paintComponent(Graphics g)
	{
		System.out.println("ChosenX(width): "+x);
		System.out.println("ChosenY(height): "+y);
		super.paintComponent(g);
		
		//the width and height of the component
		int width = getWidth();
		int height = getHeight();
		
		//the width and height of each cell
		int cellWidth = width/x;
		int cellHeight = height/y;
		
		//draw the grid
		for(int i=0; i<y; i++)
		{
			for (int j=0; j<x; j++)
			{
				Coordinate c = new Coordinate(i,j);
				NodeSquare square = new NodeSquare(c);
				square.setBounds(j*cellWidth, i*cellHeight, cellWidth, cellHeight);
				//grid.setBorder(BorderFactory.createLineBorder(Color.lightGray));
				square.changeColour(Color.DARK_GRAY);
				add(square);
				
				if(j==start.getCoord().getX())
				{
					if(i==start.getCoord().getY())
					{
						square.changeColour(Color.green);
					}
				}
				
				if(j==goal.getCoord().getX())
				{
					if(i==goal.getCoord().getY())
					{
						square.changeColour(Color.red);
					}
				}
				
				for(int m=0; m<nonTraversable.size(); m++)
				{
					if(nonTraversable.get(m).getCoord().getX()==j)
					{
						if(nonTraversable.get(m).getCoord().getY()==i)
						{
							square.changeColour(Color.LIGHT_GRAY);
						}
					}
				}
				if(nodeSquares.contains(square.coord))
				{
					square.changeColour(new Color(210, 105, 30));
				}
			}
		}
	}
	
	public void changeColour(Coordinate c)
	{
		nodeSquares.add(c);
		revalidate();
	}
}
