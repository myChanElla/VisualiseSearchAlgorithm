package visualisation.datastructure;
import java.awt.Color;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Set;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

import structures_dataTypes.Node;
import structures_dataTypes.Struct;
import uielements.UILabel;
import uielements.VisualisationUI;

public class DataStructHelper {
	DataStructVis dataStructPanel = VisualisationUI.getDataStructPanel();
	
	
	public void createNode(Node label){
		if(dataStructPanel.buttons.size() == 12 ){
			switch (dataStructPanel.struct){
			case STACK:
				dataStructPanel.remove(dataStructPanel.buttons.get(0));
				dataStructPanel.buttons.remove(0);
				for(JLabel l : dataStructPanel.buttons){
					l.setLocation(l.getX(), l.getY()+20);
				}
				break;

			case QUEUE:		
			case PRIORITY_QUEUE:
				System.out.println("too many");
				
			break;
				
			}
			
		}
		dataStructPanel.createNode(label);
	}
	
	public void removeNode(Node label){
		dataStructPanel.removeNode(label);
	}
	
	public void addAll(Set<Node> nodes){
		for(Node n : nodes){
			dataStructPanel.createNode(n);
		}
	}
	
	public void setNodesFromPriorityQueue(PriorityQueue<Node> queue){
		ArrayList<JLabel> labels = new ArrayList<>();
		for(Node n : queue){
			UILabel l = new UILabel(n.toString(), 15, new Color(210, 105, 30), Color.DARK_GRAY);
			l.setHorizontalAlignment(SwingConstants.CENTER);
			labels.add(l);	
		}
		dataStructPanel.setButtons(labels);
		//call method to present labels
		dataStructPanel.paintNodes();
		dataStructPanel.repaint();
	}
}
