package visualisation.graph;
import java.util.LinkedHashMap;

import java.util.Set;

import basics.Node;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.Pane;



/**
 * Creates each node from a graph taken as param onto a JFX Pane.
 * @author Matt C.
 *
 */
public class FxGraph extends Pane {
	//initialise here so we can use inside Runnable scope
	//private FxNode currNode;
	private ColorListener listener;
	/**
	 * @param graph, the graph from the UI that is drawn
	 * @param panel, the JFX pane on which everything is drawn
	 */
	public FxGraph(LinkedHashMap<Integer, Node> graph, JFXPanel panel){
		FxGraph fxgraph = this; //so we can pass this as an arg inside the Runnable scope
		
		Set<Integer> keys = graph.keySet();
		
		for (Integer i : keys){
			Platform.runLater(new Runnable() {  //run this code on the jfx thread
	            @Override
	            public void run() {
	            	Node node = graph.get(i);
	    			listener = new ColorListener(graph, panel, node, fxgraph);
	            	node.addObserver(listener);	
	            }
	        });
		}
	}
}
