package visualisation;
import java.awt.EventQueue;
import java.awt.Insets;
import javax.swing.JFrame;
import javax.swing.ImageIcon;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Color;
import java.awt.Font;

/**
 * 
 * @author Chrystal
 *
 */
public class HelpUI {

	private JFrame frame;
	private static int pageNumber;
	/**
	 * Launch the application.
	 * @return 
	 */
	public static void loadHelp(int selectedPage){
		pageNumber = selectedPage;
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					HelpUI window = new HelpUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public HelpUI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
// ----------------------------------------Create Frame with gridBagLayout in order to allow components to resize ----------------------------------------
		
		frame = new JFrame();
		frame.getContentPane().setBackground(Color.lightGray);
		frame.setBounds(100, 100, 990, 704);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLocationRelativeTo(null);
		
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{132,294};
		gridBagLayout.rowHeights = new int[]{0,0};
		gridBagLayout.columnWeights = new double[]{1.0,1.0,1.0,1.0};
		gridBagLayout.rowWeights = new double[]{1.0,1.0,1.0,1.0,1.0};
		frame.getContentPane().setLayout(gridBagLayout);
		
//---------------------------------------- Add Title label to frame ----------------------------------------  		
		
		JLabel lblHelp = new JLabel("Help");
		lblHelp.setForeground(Color.LIGHT_GRAY);
		GridBagConstraints gbc_lblHelp = new GridBagConstraints();
		gbc_lblHelp.fill = GridBagConstraints.BOTH;
		gbc_lblHelp.insets = new Insets(0, 0, 5, 0);
		gbc_lblHelp.gridx = 0;
		gbc_lblHelp.gridy = 0;
		gbc_lblHelp.gridwidth = 4;
		lblHelp.setOpaque(true);
		lblHelp.setBackground(new Color(210, 105, 30));
		lblHelp.setFont(new Font("Tahoma", Font.PLAIN, 30));
		frame.getContentPane().add(lblHelp	, gbc_lblHelp);
		lblHelp.setHorizontalAlignment(SwingConstants.CENTER);
		
// --------------------------------------- Information Label to tell the user what the information is showing ------------------
		String[] info = new String[5];
		
		info[0] = "How to Create a Grid";
		info[1] = "Visualisation Page";
		info[2] = "What is DFS?";
		info[3] = "What is BFS?";
		info[4] = "What is A* Search?";
		
		JLabel lblInfo = new JLabel(info[pageNumber]);
		lblInfo.setFont(new Font("Tahoma", Font.PLAIN, 26));
		lblInfo.setBackground(Color.LIGHT_GRAY);
		lblInfo.setForeground(new Color(210, 105, 30));
		GridBagConstraints gbc_lblInfo = new GridBagConstraints();
		gbc_lblInfo.insets = new Insets(0, 0, 5, 5);
		gbc_lblInfo.gridx = 1;
		gbc_lblInfo.gridy = 1;
		gbc_lblInfo.anchor = GridBagConstraints.WEST;
		frame.getContentPane().add(lblInfo, gbc_lblInfo);
							
//---------------------------------------- Add Help image label to frame ----------------------------------------  		
			
		String[] helpImages = new String[5];
		helpImages[0] = "/imgs/helpCreateGrid.png";
		helpImages[1] = "/imgs/visualisationPage.png";
		helpImages[2] = "/imgs/DFS.png";
		helpImages[3] = "/imgs/BFS.png";
		helpImages[4] = "/imgs/ASearch.png";
		
		
		JLabel lblHelpImage = new JLabel("");
		lblHelpImage.setIcon(new ImageIcon(HelpUI.class.getResource(helpImages[pageNumber]))); // Original help image to be displayed
		GridBagConstraints gbc_lblHelpImage = new GridBagConstraints();
		gbc_lblHelpImage.fill = GridBagConstraints.VERTICAL;
		gbc_lblHelpImage.anchor = GridBagConstraints.CENTER;
		gbc_lblHelpImage.insets = new Insets(0, 0, 5, 5);
		gbc_lblHelpImage.gridwidth = 2;
		gbc_lblHelpImage.gridheight = 1;
		gbc_lblHelpImage.gridx = 1;
		gbc_lblHelpImage.gridy = 2;
		frame.getContentPane().add(lblHelpImage, gbc_lblHelpImage);
			
//---------------------------------------- Add Next button to frame ----------------------------------------  
			
		UIButton btnNext = new UIButton("Next ->");
		
		GridBagConstraints gbc_btnNext = new GridBagConstraints();
		gbc_btnNext.anchor = GridBagConstraints.EAST;
		gbc_btnNext.fill = GridBagConstraints.VERTICAL;
		gbc_btnNext.insets = new Insets(0, 0, 5, 5);
		gbc_btnNext.gridx = 2;
		gbc_btnNext.gridy = 3;
		frame.getContentPane().add(btnNext, gbc_btnNext);
		
		btnNext.addActionListener(new ActionListener() {		// Takes user to the next help image
			public void actionPerformed(ActionEvent arg0) 
			{
				if (pageNumber < 4)
				{
					pageNumber++;
					lblInfo.setText(info[pageNumber]);
					lblHelpImage.setIcon(new ImageIcon(HelpUI.class.getResource(helpImages[pageNumber])));
				}
				//lblHelpImage.setIcon(new ImageIcon(HelpUI.class.getResource("/imgs/pause.png"))); 
				
			}
		});
		
//---------------------------------------- Add Back button to frame ----------------------------------------  		
		
		UIButton btnBack = new UIButton("<- Back");
				
		GridBagConstraints gbc_btnBack = new GridBagConstraints();
		gbc_btnBack.anchor = GridBagConstraints.WEST;
		gbc_btnBack.fill = GridBagConstraints.VERTICAL;
		gbc_btnBack.insets = new Insets(0, 0, 5, 5);
		gbc_btnBack.gridx = 1;
		gbc_btnBack.gridy = 3;
		frame.getContentPane().add(btnBack, gbc_btnBack);
		
		btnBack.addActionListener(new ActionListener() {	//Takes user to pervious image
			public void actionPerformed(ActionEvent arg0) 
			{
				if (pageNumber > 0)
				{
					pageNumber--;
					lblInfo.setText(info[pageNumber]);
					lblHelpImage.setIcon(new ImageIcon(HelpUI.class.getResource(helpImages[pageNumber])));
				}
			}
		});

//---------------------------------------- Add Close button to frame ----------------------------------------  		
		
		UIButton btnClose = new UIButton("Close");
		
		GridBagConstraints gbc_btnClose = new GridBagConstraints();
		gbc_btnClose.fill = GridBagConstraints.BOTH;
		gbc_btnClose.gridx = 3;
		gbc_btnClose.gridy = 4;
		gbc_btnClose.insets = new Insets(5, 5, 0, 0);
		frame.getContentPane().add(btnClose, gbc_btnClose);
				
		btnClose.addActionListener(new ActionListener() { // Close HelpUI window
			public void actionPerformed(ActionEvent arg0) 
			{
				frame.setVisible(false);
			}
		});
	}	
	
/**
 * Sets up buttons original colours 
 * Allows all the buttons on the page change colour depending on whether the mouse is over them or not
 * @param button - a Jbutton that is being used 
 */
}
