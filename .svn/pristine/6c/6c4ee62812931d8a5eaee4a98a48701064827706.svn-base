import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.swing.JPanel;

public class GridVisualiser extends JPanel
{
	private String searchType = GridMaker.searchType;
	private int x= GridMaker.chosenX;
	private int y= GridMaker.chosenY;
	private Node start= GridMaker.start;
	private Node goal= GridMaker.end;
	private ArrayList<Node> nonTraversable= GridMaker.block;
	
	public GridVisualiser(){}
	

	public void executeSearch(LinkedHashMap<Integer, Node> graph, Node start, Node goal)
	{
		Coordinate startC = start.coord;
		Coordinate goalC = goal.coord;
		Node startNode = graph.get(startC.genHash());
		Node goalNode = graph.get(goalC.genHash());
		
		if(searchType == "Depth First Search")
		{
			DFS depth = new DFS();
			Node end = depth.dfs(startNode, goalNode);
		}
		if(searchType == "Breadth First Search")
		{
			BFS breadth = new BFS();
			Node end = breadth.bfs(startNode, goalNode);
		}
		if(searchType == "A* Search")
		{
			Astar astar = new Astar();
			Node end = astar.astar(startNode, goalNode);
		}
		else
		{
			System.out.println("Error no search selected");
		}
	}
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D) g.create();
		
		//the width and height of the component
		int width = getWidth();
		int height = getHeight();
		
		//the width and height of each cell
		int cellWidth = width/x;
		int cellHeight = height/y;
		
		//the space between the component and the grid.
		int xMargin = (width - (cellWidth*x))/2;
		int yMargin = (height - (cellHeight*y))/2;
		
		//draw the grid
		for(int i=0; i<x; i++)
		{
			for (int j=0; j<y; j++)
			{
				Rectangle grid = new Rectangle(
									xMargin+(i*cellWidth),
									yMargin+(j*cellHeight),
									cellWidth,
									cellHeight);
				
				g2d.setColor(Color.BLACK);
				g2d.draw(grid);
				
				if(i==start.getCoord().getX())
				{
					if(j==start.getCoord().getY())
					{
						g2d.setColor(Color.RED);
						g2d.fill(grid);
						
					}
				}
				
				if(i==goal.getCoord().getX())
				{
					if(j==goal.getCoord().getY())
					{
						g2d.setColor(Color.GREEN);
						g2d.fill(grid);
						
					}
				}
				
				for(int m=0; m<nonTraversable.size(); m++)
				{
					if(nonTraversable.get(m).getCoord().getX()==i)
					{
						if(nonTraversable.get(m).getCoord().getY()==j)
						{
							g2d.setColor(Color.BLACK);
							g2d.fill(grid);
						}
					}
				}			
			}
		}
	}
	

}
